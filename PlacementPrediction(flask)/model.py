# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J27xw_ixGcANm4_Tiam-7q2AhDxXz7pr
"""

import numpy as np
import pandas as pd
import pickle
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import preprocessing

df = pd.read_csv('Placement_Data_Full_Class.csv')

x = df.drop('status', axis='columns')  # Drop the target column
x = x.drop('sl_no', axis='columns')
x = x.drop('salary', axis='columns')
y = df['status']  # Target column

# Apply Label Encoding to categorical columns
le = preprocessing.LabelEncoder()
x['gender'] = le.fit_transform(x['gender'])
x['ssc_b'] = le.fit_transform(x['ssc_b'])
x['hsc_b'] = le.fit_transform(x['hsc_b'])
x['hsc_s'] = le.fit_transform(x['hsc_s'])
x['degree_t'] = le.fit_transform(x['degree_t'])
x['workex'] = le.fit_transform(x['workex'])
x['specialisation'] = le.fit_transform(x['specialisation'])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=30)

# Create and train a Decision Tree classifier
classify = DecisionTreeClassifier(random_state=42)
classify = classify.fit(X_train, y_train)

# Save the trained model to a .pkl file
with open('model.pkl', 'wb') as file:
    pickle.dump(classify, file)

# Load the trained model from the saved .pkl file
loaded_model = pickle.load(open('model.pkl', 'rb'))

# Example prediction using the loaded model
prediction = loaded_model.predict([[1, 80.000000, 1, 70.000000, 1, 1, 72.000000, 2, 0, 87.000000, 1, 71.040000]])
print(prediction)